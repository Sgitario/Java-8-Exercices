package com.sgitario.coderbyte.easy;

import java.util.Arrays;
import java.util.List;
import java.util.Set;
import java.util.function.BiConsumer;
import java.util.function.BinaryOperator;
import java.util.function.Function;
import java.util.function.Supplier;
import java.util.stream.Collector;

public class DashInsertII {
	
	boolean isOdd(int num) {
		return num % 2 == 1;
	}
	
	String DashInsertII(String num) {
		List<String> str = Arrays.asList(num.split(""));
		str.stream()
			.collect(new Collector<String, String, String>() {

				@Override
				public Supplier<String> supplier() {
					return () -> "";
				}

				@Override
				public BiConsumer<String, String> accumulator() {
					return (output, character) -> {
						boolean lastChOdd = isOdd("" + output.charAt(output.length() - 1));
						
						 += character;
					};
				}

				@Override
				public BinaryOperator<String> combiner() {
					return (s1, s2) -> s1 += s2;
				}

				@Override
				public Function<String, String> finisher() {
					// TODO Auto-generated method stub
					return null;
				}

				@Override
				public Set<java.util.stream.Collector.Characteristics> characteristics() {
					// TODO Auto-generated method stub
					return null;
				}
				
			})
		
		int previous = getNum(str[1]);
		String output = "" + previous;
		
		for (int index = 2; index < str.length; index++) {
			int item = getNum(str[index]);
			if (isOdd(item) && isOdd(previous)) {
				output += "-"; 
			} else if (!isOdd(item) && !isOdd(previous)) {
				output += "*"; 
			}
			
			output += "" + item;
			previous = item;
		}

		return output;
	}
	
	boolean isOdd(int num) {
		return num % 2 == 1;
	}
	
	int getNum(String ch) {
		return Integer.valueOf(ch);
	}

	public static void main(String[] args) {
		DashInsertII c = new DashInsertII();
		
		System.out.print(c.DashInsertII("99946"));
	}
}
