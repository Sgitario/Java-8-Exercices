package com.sgitario.piksel.discovery;

import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class PremieresComparator {
	
	private Collection<Premiere> parsePremieres(String file) {
		Set<Premiere> p = new HashSet<Premiere>();
		
		
		
		Set<Premiere> premieres = Files.readAllLines(Paths.get(file))
			.stream()
				.filter((l) -> !l.isEmpty())
				.collect(() -> new HashSet(), (s, l) -> s.add(parsePremiere(l)), (s1, s2) -> s1.addAll(s2));
		
		try (Stream<String> stream = Files.lines(Paths.get("res/nashorn1.js"))) {
		    stream
		        .filter(line -> !line.isEmpty())
		        .map(String::trim)
		        .forEach(System.out::println);
		}
		
		try (Stream<Path> stream = Files.list(Paths.get(file))) {
		    Premiere premiere = stream
		        .collect(new Collector<String, Premiere, Premiere>() {
		        	
		        });
		}
		
		return premieres;
	}
	
	public Premiere parsePremiere(String l) {
		Premiere p = new Premiere();
		String[] arr = l.split(",");
	}
	
	public static void main(String[] args) {
		PremieresComparator c = new PremieresComparator();
		
		Collection<Premiere> premieres = c.parsePremieres("report_after.lst");
	}

	

	class Premiere {
		String datamartId;
		String langCode;
		String langDue;
	}
}
